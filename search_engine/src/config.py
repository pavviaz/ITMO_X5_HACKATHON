path_to_index = "init_data/flat.index"
# path_to_index = "/home/shace_linux/projects/ITMO_X5_HACKATHON/search_engine/init_data/flat.index"

path_to_excel = "init_data/x5_qa.csv"
# path_to_excel = "/home/shace_linux/projects/ITMO_X5_HACKATHON/search_engine/init_data/x5_qa.csv"
# path_to_testfile = "init_data/spec_final_val.csv"

healthcheck_timeout = 30
healthcheck_sleep = 5
topn = 10

max_new_tokens = 512

abbr_decoding = {
    "лк": "личный кабинет",
    "БиР": "Беременность и роды",
    "зп": "заработная плата",
    "НДФЛ": "Налог на доходы физических лиц",
    "СТД": "срочный трудовой договор",
    "ТК": "трудовой договор",
    "АО": "авансовый отчет",
    "SLA": "сроки",
    "ЭЦП": "электронная цифровая подпись",
    "КР": "кадровый резерв",
}

popular_answers = {
    "popular_angry": "Чат-бот находится в стадии пилотирования и обучается ежедневно. Пожалуйста, обратитесь в поддержку или попробуйте переформулировать свой запрос",
    "popular_exit": "Для оформления обращения в техническую поддержку вам необходимо нажать на кнопку \"Выйти из чата\" или позвонить по номеру доб.10-100, прямой +7 (XXX) XXX XX XX."
}

qr_prompt = \
"""
Тебе будет подана история общения пользователя и ассистента. Твоя задача - переписать запрос пользователя, учитывая историю диалога (контекстуализировать, чтобы его смысл был понятен вне остальных запросов).
Ты НЕ ДОЛЖЕН отвечать на вопрос! Твоя задача - ПЕРЕПИСАТЬ!
Если в истории только один запрос (от пользователя), оставь его как есть

===ИСТОРИЯ===
{history}

Ответь в формате JSON с единственным ключом "answer", значение которого и будет переписанный запрос. Отвечай только на русском, и очень кратко.
"""

stuff_prompt = \
"""
Тебе будет подан пользовательский запрос и релевантные фрагменты текста, в которых возможно содержится ответ на поставленный вопрос.
Проанализируй каждый фрагмент, и, если в нем есть ответ на вопрос пользователя, используй его для генерации финального ответа на изначальный пользовательский запрос.
Некоторые фрагменты могут быть помечены как не релевантные: игнорируй их.

ЗАПРОС: {query}
ФРАГМЕНТЫ ТЕКСТА:
{passages}

Ответь в формате JSON с единственным ключом "answer", значение которого и будет финальный ответ на вопрос с учетом поданного контекста. Отвечай только на русском.
"""


popularity_prompt = \
"""
Ты бот, созданный для помощи технической поддержки. Тебе будет подан пользовательский запрос, содержащий обращение к технической поддержки\n
Запрос: \n{query}\n
Твоя задача оценить, является ли запрос близким по смыслу к запросам из списка:
[
Уберите этот чат бот он очень мешает,
вернуть старый дизайн,
бот тупой,
бот не помогает,
как убрать бота,
вернуться на старый портал,
нужен оператор
]\n
Если запрос близок по смыслу к одному из представленных верни такой ответ в формате json:
{{
"answer": "popular_angry"
}}
Если запрос близок по смыслу к одному из этих запросов:
[
выйти,
хочу создать заявку,
мне нужно создать заявку,
мне сказали создать заявку в поддержке,
выход,
]
Верни такой ответ:
{{
"answer": "popular_exit"
}}
Если запрос не похож ни на один из представвленных в списке верни такой ответ:
{{
"answer": "ordinary"
}}
Начни отвечать с {{"answer":
"""

domain_prompt = \
"""
Тебе будет подан пользовательский запрос, содержащий обращение к технической поддержке
Запрос: {query}
Твоя задача оценить, относится ли запрос к одной или нескольким категориям из следующего списка:
["автомобиль", "БиР (Беременность и роды)", "больничный", "график работы", "доверенность", "зарплата", "заявки", "командировка", "ЛК (Личный кабинет)", "материальная помощь",, "моя карьера", "МЧД (Машиночитаемая доверенность)", "налоговый вычет", "отгул", "отпуск", "перевод", "поддержка", "ЭЦП (Электронная цифровая подпись)", "документооборот", "прием на работу", "СБ (Служба безопасности)", "справка", "табель", "увольнение", "удаленная работа", "уход за больным", "SED", "выручай-карта", "дмс", "оператор", "обучение"]
Ответь в формате JSON с единственным ключом "answer", значение которого может быть:
- "single": если запрос можно отнести только к одной единственной категории. Примеры: ["как выпустить ЭЦП?", "не получается зайти в ЛК", "В прошлом месяце переболел, но забыл прикрепить больничный. Что делать?"]
- "multi": если запрос неточен или может относиться к нескольким из представленных классов. Примеры: ["Как получить справку?", "Куда позвонить?", "Все зависло"]
- "trash" в любом другом случае, особенно если в вопросе есть жаргонизмы. Примеры: ["Позови кожаного", "Как залезть на эверест?", "Ты меня достал"]
Не пиши никаких пояснений к ответу. Ответ должен содердать только JSON словарь!
"""

map_prompt = \
"""
Тебе будет подан пользовательский запрос и фрагмент текста, в котором возможно содержится ответ на заданный вопрос.
Проанализируй этот фрагмент, и, если в нем есть ответ на вопрос, используй его для генерации четкого и понятного ответа.
Если в фрагменте не содержится информации с помощью которой можно было бы ответить на поставленный вопрос, напиши в ответе "!не релевантный фрагмент!"

ЗАПРОС: {query}
ФРАГМЕНТ ТЕКСТА:
{passages}

Ответь в формате JSON с единственным ключом "answer", значение которого и будет ответом на вопрос с учетом поданного текста. Отвечай только на русском.
"""

def faiss_func(x):
    return f'Запрос: {x["question"]}; Ответ: {x["content"]}; Категория: {x["category"]}'
